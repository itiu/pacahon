1.

Pacahon: 
    Ядро документ-ориентированной системы. 
    Концептуальная идея системы - хранение и обработка данных на основе онтологий.
    Ядро системы предназначено для хранения / поиска / авторизации данных хранимых в виде триплетов.
Используемые языки: 
    D2.
Runtime библиотека: 
    phobos.
Транспортный уровень: 
    zeromq/nanomsg/rabbitmq.
Хранилище и поиск: 
    lmdb + xapian.


2. УСТАНОВКА

NB: Описание сборки / установки приведено для POSIX-систем.

2.1. Требуемое ПО:

- Клиент системы контроля версий GIT.
- Digital mars D2 compiler dmd 2.064.2 ( http://dlang.org )

используемые библиотеки, (статические библиотеки находятся в ./lib64):

zeromq v3.2.3 ( http://www.zeromq.com )
- libzmq,a
- libczmq.a:

xapian 1.2.16 ( http://xapian.org )
- libxapian-backend.a 
- libxapian.a 

xapian D2 binding:
- libxapiand.a ( https://github.com/itiu/xapian-d/archive/8a82f0b05c91f517e3df5480b2f72843b2871c6f.zip )
- libstdc++.a

lmdb 0.9.10 ( http://symas.com/mdb, https://gitorious.org/mdb/mdb/archive/f39bceb800dd1b1b4b05cfb45a3ddde94a273fff.tar.gz )
- liblmdb.a

rabbitmq-c 0.4.0 ( http://github.com/alanxz/rabbitmq-c ) 
- librabbitmq.a


2.2. Процедура сборки / установки:

2.2.1. Установить требуемое ПО.

2.2.2. Загрузить и скомпилировать pacahon:

linux:

    git clone git@github.com:itiu/pacahon.git
    cd pacahon
    ./build-dmd64.sh

После компиляции в каталоге появится исполняемый файл Pacahon-XXXXXXXX

2.3. Запуск

Если отсутствует конфигурационный файл pacahon-properties.json, то при первом запуске pacahon создаст 
требуемый конфигурационный файл по умолчанию.

3 Загрузка базовой онтологии

3.1 Обновить базовую онтологию можно поместив ее в папку ./core-onto.
Файлы онтологий должны быть в формате turtle и иметь расширение *.ttl


4. ДОКУМЕНТАЦИЯ:

обзор комманд и формата сообщений: doc/message-and-command-format.odt 
